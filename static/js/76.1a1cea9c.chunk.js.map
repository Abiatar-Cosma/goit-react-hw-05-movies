{"version":3,"file":"static/js/76.1a1cea9c.chunk.js","mappings":"yNACA,EAAgC,4BAAhC,EAAoE,oBAApE,EAAmG,uBAAnG,EAAqI,uBAArI,EAAyK,yBAAzK,EAAqN,+BAArN,EAAgQ,wBAAhQ,EAAoS,wBAApS,EAA6U,6B,SCyC3U,EArCW,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,IAEpBI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAASU,KAAKH,EAChC,GAAG,CAACP,IAKJ,OACEW,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAC,sBAC7BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAC5BR,EAAKU,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAAY,OAC5CV,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAgBC,SAAA,CACrCO,GACCN,EAAAA,EAAAA,KAAA,OACEO,IAAG,GAAAC,OAVI,mCAUaA,OAAGF,GACvBG,IAAKL,EACLP,UAAWC,KAGbE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAwBC,SAAC,cAE3CH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAiBC,SAAEK,KACtCJ,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAsBC,SAAEM,SAZjCF,EAcJ,QAKf,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"title\":\"Cast_title__0cH9s\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"actorImage\":\"Cast_actorImage__IECZO\",\"placeholderImage\":\"Cast_placeholderImage__iWsPl\",\"actorInfo\":\"Cast_actorInfo__8ZWx-\",\"actorName\":\"Cast_actorName__XabVA\",\"actorCharacter\":\"Cast_actorCharacter__m+TBZ\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/api';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n  \n    useEffect(() => {\n      getMovieCredits(movieId).then(setCast);\n    }, [movieId]);\n  \n    // URL-ul de bază pentru imaginile actorilor\n    const imageBaseUrl = 'https://image.tmdb.org/t/p/w200';\n  \n    return (\n      <div className={styles.castContainer}>\n        <h2 className={styles.title}>Distribuție</h2>\n        <ul className={styles.castList}>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <li key={id} className={styles.castItem}>\n              {profile_path ? (\n                <img\n                  src={`${imageBaseUrl}${profile_path}`}\n                  alt={name}\n                  className={styles.actorImage}\n                />\n              ) : (\n                <div className={styles.placeholderImage}>No Image</div>\n              )}\n              <div className={styles.actorInfo}>\n                <strong className={styles.actorName}>{name}</strong>\n                <p className={styles.actorCharacter}>{character}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n  \n  export default Cast;"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getMovieCredits","then","_jsxs","className","styles","children","_jsx","map","_ref","id","name","character","profile_path","src","concat","alt"],"sourceRoot":""}