{"version":3,"file":"static/js/168.cda06ff5.chunk.js","mappings":"2NACA,EAAmC,kCAAnC,EAA6E,uBAA7E,EAAkH,6BAAlH,EAA4J,4BAA5J,EAAuM,8BAAvM,EAA8O,wBAA9O,EAAgR,yBAAhR,EAAqT,2B,SC+CrT,EA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAM1B,OAJAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAASU,KAAKH,EAChC,GAAG,CAACP,KAGFW,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAwBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAC,aAC5BR,EAAQU,QACPD,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAmBC,SAC/BR,EAAQW,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjCV,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAkBC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAoBC,UAClCC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAcC,SAAEM,OAErCL,EAAAA,EAAAA,KAAA,KACEH,UAAWC,EACXS,wBAAyB,CAAEC,OAAQF,OAN9BF,EAQJ,OAITJ,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAiBC,SAAC,2CAIxC,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"title\":\"Reviews_title__t265C\",\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"reviewHeader\":\"Reviews_reviewHeader__72tsb\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\",\"noReviews\":\"Reviews_noReviews__TJWdg\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieReviews } from '../../services/api';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviewsContainer}>\n      <h2 className={styles.title}>Recenzii</h2>\n      {reviews.length ? (\n        <ul className={styles.reviewsList}>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id} className={styles.reviewItem}>\n              <div className={styles.reviewHeader}>\n                <strong className={styles.author}>{author}</strong>\n              </div>\n              <p\n                className={styles.content}\n                dangerouslySetInnerHTML={{ __html: content }}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={styles.noReviews}>Fără recenzii disponibile.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired, // id-ul recenziei\n      author: PropTypes.string.isRequired, // autorul recenziei\n      content: PropTypes.string.isRequired, // conținutul recenziei\n    })\n  ),\n};\n\nexport default Reviews;"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","getMovieReviews","then","_jsxs","className","styles","children","_jsx","length","map","_ref","id","author","content","dangerouslySetInnerHTML","__html"],"sourceRoot":""}