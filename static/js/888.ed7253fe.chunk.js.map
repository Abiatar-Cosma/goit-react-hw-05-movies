{"version":3,"file":"static/js/888.ed7253fe.chunk.js","mappings":"2NACA,EAA4B,gCAA5B,EAAoE,4BAApE,EAA+G,mCAA/G,EAA2J,6BAA3J,EAAmM,+BAAnM,EAA0O,4BAA1O,EAA6Q,2BAA7Q,EAAkT,8B,SCqDlT,EAhDqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAMtB,IAJAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAASU,KAAKH,EAChC,GAAG,CAACP,KAECM,EAAO,OAAOK,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeC,SAAC,eAKjD,OACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAAER,EAAMU,SAGpCD,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAoBC,SAAA,CACjCR,EAAMW,cACLN,EAAAA,EAAAA,KAAA,OACEO,IAAG,GAAAC,OAVQ,mCAUSA,OAAGb,EAAMW,aAC7BG,IAAG,cAAAD,OAAgBb,EAAMU,OACzBJ,UAAWC,KAGfF,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBC,SAAER,EAAMe,eAIxCN,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAaC,SAAA,EAC3BH,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,OAAOX,UAAWC,EAAYC,SAAC,sBACxCH,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,UAAUX,UAAWC,EAAYC,SAAC,iBAG7CH,EAAAA,EAAAA,KAACa,EAAAA,GAAM,MAGb,C","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"title\":\"MovieDetails_title__RBndM\",\"movieContent\":\"MovieDetails_movieContent__lD1Ru\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"overview\":\"MovieDetails_overview__EVogb\",\"links\":\"MovieDetails_links__WB7Lu\",\"link\":\"MovieDetails_link__wf74g\",\"loading\":\"MovieDetails_loading__6fWGs\"};","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieDetails } from '../../services/api';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) return <p className={styles.loading}>Loading...</p>;\n\n  // URL-ul de bază pentru imaginile filmelor\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>{movie.title}</h1>\n      \n      {/* Container pentru poster + descriere */}\n      <div className={styles.movieContent}>\n        {movie.poster_path && (\n          <img\n            src={`${imageBaseUrl}${movie.poster_path}`}\n            alt={`Poster for ${movie.title}`}\n            className={styles.poster}\n          />\n        )}\n        <p className={styles.overview}>{movie.overview}</p>\n      </div>\n\n      {/* Link-uri pentru distribuție și recenzii */}\n      <div className={styles.links}>\n        <Link to=\"cast\" className={styles.link}>Distribuție</Link>\n        <Link to=\"reviews\" className={styles.link}>Recenzii</Link>\n      </div>\n\n      <Outlet />\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired, // Titlul filmului este un string și este obligatoriu\n    poster_path: PropTypes.string, // Calea poster-ului este un string (poate fi null)\n    overview: PropTypes.string.isRequired, // Descrierea filmului este un string și este obligatorie\n  }),\n};\n\nexport default MovieDetails;"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","getMovieDetails","then","_jsx","className","styles","children","_jsxs","title","poster_path","src","concat","alt","overview","Link","to","Outlet"],"sourceRoot":""}